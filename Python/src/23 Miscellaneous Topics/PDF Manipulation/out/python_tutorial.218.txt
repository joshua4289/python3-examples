 
Python
 
 
 
 
206
 
 

 
If the module isn't found, Pyt
hon then searches each directory in the shell 
variable PYTHONPATH.
 

 
If all else fails, Python checks the default path. On UNIX, this default path is 
normally /usr/local/lib/python/.
 
The module search path is stored in the system module sys as the
 
sys.path
 
v
ariable. 
The sys.path variable contains the current directory, PYTHONPATH, and the 
installation
-
dependent default.
 
The
 
PYTHONPATH
 
Variable
 
The 
PYTHONPATH
 
is an environment variable, consisting of a list of directories. The 
syntax of PYTHONPATH is the same 
as that of the shell variable PATH.
 
Here is a typical PYTHONPATH from a Windows system:
 
set
 
PYTHONPATH
=
c
:
\
python20
\
lib
;
 
And here is a typical PYTHONPATH from a UNIX system:
 
set
 
PYTHONPATH
=
/usr/
local
/
lib
/
python
 
Namespaces and Scoping
 
Variables are names 
(identifiers) that map to objects. A
 
namespace
 
is a dictionary of 
variable names (keys) and their corresponding objects (values).
 
A Python statement can access variables in a
 
local namespace
 
and in the
 
global 
namespace
. If a local and a global variable hav
e the same name, the local variable 
shadows the global variable.
 
Each function has its own local namespace. Class methods follow the same scoping 
rule as ordinary functions.
 
Python makes educated guesses on whether variables are local or global. It assumes
 
that any variable assigned a value in a function is local.
 
Therefore, in order to assign a value to a global variable within a function, you must 
first use the global statement.
 
The statement
 
global VarName
 
tells Python that 
VarName
 
is a global variable. 
Python 
stops searching the local namespace for the variable.
 
For example, we define a variable
 
Money
 
in the global namespace. Within the 
function
Money
, we assign
 
Money
 
a value, therefore Python assumes
 
Money
 
as a local 
