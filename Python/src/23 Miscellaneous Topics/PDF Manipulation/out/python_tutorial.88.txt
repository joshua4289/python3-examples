 
Python
 
 
 
 
76
 
 
Strings are amongst the most popular types in Python. We can create them simply 
by enclosing characters in 
quotes. Python treats single quotes the same as double 
quotes.
 
Creating strings is as simple as assigning a value to a variable. For example:
 
var1 
=
 
'Hello World!'
 
var2 
=
 
"Python Programming"
 
Accessing Values in Strings
 
Python does not support a character
 
type; these are treated as strings of length one, 
thus also considered a substring.
 
To access substrings, use the square brackets for slicing along with the index or 
indices to obtain your substring. Fo
r
 
example:
 
#!/usr/bin/python
 
 
var1 
=
 
'Hello World!'
 
var2 
=
 
"Python Programming"
 
 
print
 
"var1[0]: "
,
 
var1
[
0
]
 
print
 
"var2[1:5]: "
,
 
var2
[
1
:
5
]
 
When the above code is executed, it produces the following result:
 
var1
[
0
]:
  
H
 
var2
[
1
:
5
]:
  
ytho
 
Updating Strings
 
You can "update" an existing stri
ng by (re)assigning a variable to another string. The 
new value can be related to its previous value or to a completely different string 
altogether. Fo
r
 
example:
 
9.
 
STRINGS
 
