 
Python
 
 
 
 
194
 
 
Pass
ing
 
by 
R
eference 
Versus Passing by
 
V
alue
 
All parameters (arguments) in the Python language are passed by reference. It 
means if you change what a parameter refers to within a function, the change
 
also 
reflects back in the calling function. For example:
 
#!/usr/bin/python
 
 
# Function definition is here
 
def
 
changeme
(
 
mylist 
):
 
   
"This changes a passed list into this function"
 
   
mylist
.
append
([
1
,
2
,
3
,
4
]);
 
   
print
 
"Values inside the function: "
,
 
mylist
 
   
return
 
 
# Now you can call changeme function
 
mylist 
=
 
[
10
,
20
,
30
];
 
changeme
(
 
mylist 
);
 
print
 
"Values outside the function: "
,
 
mylist
 
Here, we are maintaining reference of the passed object and appending values in the 
same object. So, this would 
produce the following result:
 
Values
 
inside the 
function
:
  
[
10
,
 
20
,
 
30
,
 
[
1
,
 
2
,
 
3
,
 
4
]]
 
Values
 
outside the 
function
:
  
[
10
,
 
20
,
 
30
,
 
[
1
,
 
2
,
 
3
,
 
4
]]
 
There is one more example where argument is being passed by reference and the 
reference is being overwritten 
inside the called function.
 
#!/usr/bin/python
 
 
# Function definition is here
 
def
 
changeme
(
 
mylist 
):
 
