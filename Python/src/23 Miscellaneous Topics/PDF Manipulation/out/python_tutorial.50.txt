 
Python
 
 
 
 
38
 
 
Python Bitwise Operators
 
Bitwise operator works on bits and perform
s
 
bit by bit operation. Assume if a = 60; 
and b = 13; Now in binary format they will be as follows:
 
a = 0011 1
100
 
b = 0000 1101
 
-----------------
 
a&b = 0000 1100
 
a|b = 0011 1101
 
a^b = 0011 0001
 
~a
 
 
= 1100 0011
 
There are following Bitwise operators supported by Python language
 
 
Operator
 
Description
 
Example
 
&
 
 
Binary AND
 
Operator copies a bit to the result if it 
exists in both operands.
 
(a & b) 
=
 
12 
 
(
means 
0000 1100
)
 
|
 
Binary OR
 
It 
copies a bit if it exists in 
either 
operand.
 
(a | b) 
= 
61 
 
(
means 
0011 1101
)
 
^
 
Binary XOR
 
It 
copies the bit if it is set in one 
operand but not both.
 
(a ^ b) 
=
 
49 
(means
 
0011 0001
)
 
~
 
 
Binary 
 
Ones Complement
 
It
 
is unary and has the ef
f
ect of 
'flipping' bits.
 
(~a ) 
=
 
-
61 
(means 
1100 0011 in 2's 
complement form due 
to a signed binary 
number.
 
<<
 
 
Binary Left Shift
 
The left operands value is moved left by 
the 
number of bits specified by the right 
operand.
 
a << 2 
=
 
240 
 
(means
 
1111 0000
)
 
