import numpy as np
import matplotlib.pyplot as plt
import skimage.morphology as morphology
import scipy.ndimage as nd

from skimage import data, color
from skimage.transform import hough_circle
from skimage.feature import peak_local_max, canny
from skimage.draw import circle_perimeter
from skimage.util import img_as_ubyte
import PIL.Image as Image

def load_image( infilename ) :
    img = Image.open( infilename )
    img.load()
    data = np.asarray( img, dtype="int32" )
    return data

def set_title(title):
    figure = plt.gcf()
    figure.canvas.set_window_title(title)


image = load_image("images/tablets.jpg")
image = image[:,:,0]
# Load picture and detect edges
# image = img_as_ubyte(data.coins()[0:95, 70:370])
edges = canny(image, sigma=3, low_threshold=10, high_threshold=50)
print edges.shape
plt.imshow(edges, cmap=plt.cm.gray)
plt.show()


closed = morphology.binary_closing(edges)
plt.imshow(closed, cmap=plt.cm.gray)
plt.show()

filled = nd.binary_fill_holes(closed).astype(int)
plt.imshow(filled, cmap=plt.cm.gray)
plt.show()


import sys
sys.exit()


# fig, ax = plt.subplots(ncols=1, nrows=1, figsize=(10, 4))

# Detect two radii
hough_radii = np.arange(20, 24, 1)
hough_res = hough_circle(edges, hough_radii)
print hough_res.shape
for i in range(len(hough_radii)): 
    plt.imshow(hough_res[i], cmap=plt.cm.gray)
    plt.show()
import sys
sys.exit()

centers = []
accums = []
radii = []

for radius, h in zip(hough_radii, hough_res):
    # For each radius, extract two circles
    num_peaks = 2
    peaks = peak_local_max(h, num_peaks=num_peaks)
    centers.extend(peaks)
    accums.extend(h[peaks[:, 0], peaks[:, 1]])
    radii.extend([radius] * num_peaks)

print len(centers), centers

# Draw the most prominent 5 circles
image = color.gray2rgb(image)
# for idx in np.argsort(accums)[::-1][:5]:
#     center_x, center_y = centers[idx]
#     radius = radii[idx]
#     cx, cy = circle_perimeter(center_y, center_x, radius)
#     image[cy, cx] = (220, 20, 20)

ax.imshow(image, cmap=plt.cm.gray)
plt.show()

# enhance the image
threshold = 220
image[ image[:,:] <= threshold] = 0
image[ image[:,:] > threshold] = 1
set_title("enhanced image")

plt.imshow(image, interpolation="none", cmap="gray")
plt.show()
