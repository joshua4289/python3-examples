Day 1
=====

Hello World
	to show debugger, comments, print
Pointers and Objects:
	set x = different types to illustrate pointers and types
Objects
	show the id and type functions
Integers
	factorial function with large integers
	decimal module
Immutable/Mutable
	write 2 functions to increment integers and append lists
Lists and Tuples
	memory layout and immutable/mutable pointers
	casting and shallow copies
	slices and shallow copies
	copy module
Dictionaries
	apparently stored in random order
	adding, overwriting, deleting - keys and values
	displaying key,values in order
Functions
	show how function pointers work
	example of lambdas
	default parameters
	pass by position, pass by name
	variadic functions

Day 2
=====
Setup
	import my demos from GIT
Compiler and Interpreter
	draw compiler/interpreter diagram
	show byte code using dis module
	show what the interpreter does using ADD numbers and strings
Modules and Packages
	building a simple library of functions
	importing, from
	displaying symbol table
	library of classes
	PYTHONPATH
Classes
	Point class
	__init__
	statics
	memory diagram
Operator Overloading
File I/O
Exception Handling

Decorators
	staticmethod, classmethod, property
	write a trace decorator
	chain decorators together

Day 3
=====
Functional
	list comprehensions
	other comprehensions
	iterators
	generators
Numpy
	surface plots ???
Matplotlib
	Orbits ???
Git
	scripting git
Timing
	timing modules
Exception Handling
	???
iPython
	Sympy examples
Regex
	???
Threading
	???
Testing and TDD

Day 4
=====
Interfacing to C/C++
Cython
Creating local repos
iPython and SymPy

Day 5
=====
Pandas
	Oxford temperature data
ScikitLearn
	???
ScikitImage
	counting rice grains

GUIs ???????????????????????????
Django
Inheritance, Patterns, MetaClasses
Differences between Python 2 and 3
XML and JSON
RegExs
Creating EXEs and Installers
	http://cyrille.rossant.net/create-a-standalone-windows-installer-for-your-python-application/	
	