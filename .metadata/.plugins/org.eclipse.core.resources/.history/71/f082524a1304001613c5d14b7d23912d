{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": [
       "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\n",
       "gg==\n"
      ],
      "text/latex": [
       "$$\\left ( \\frac{\\partial}{\\partial x} \\sqrt{x^{2} + y^{2}}, \\quad \\frac{x}{\\sqrt{\\sigma^{2} + x^{2} + y^{2}}}\\right )$$"
      ],
      "text/plain": [
       "⎛  ⎛   _________⎞                   ⎞\n",
       "⎜∂ ⎜  ╱  2    2 ⎟          x        ⎟\n",
       "⎜──⎝╲╱  x  + y  ⎠, ─────────────────⎟\n",
       "⎜∂x                   ______________⎟\n",
       "⎜                    ╱  2    2    2 ⎟\n",
       "⎝                  ╲╱  σ  + x  + y  ⎠"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import sympy\n",
    "from sympy import Derivative, sqrt, diff\n",
    "sympy.init_printing()\n",
    "\n",
    "def phi (x, y, sigma):\n",
    "    return sqrt(x**2 + y**2 + sigma**2)\n",
    "\n",
    "\n",
    "x, y, sigma = sympy.symbols('x, y, sigma')\n",
    "\n",
    "# we are working with the function:\n",
    "#  f(x, y, sigma) = (x**2 + y**2 + sigma**2)**0.5\n",
    "#\n",
    "#  => df/dx = 0.5*(x**2 + y**2 + sigma**2)**-0.5 * 2*x \n",
    "#           = x / (x**2 + y**2 + sigma**2)**0.5\n",
    "\n",
    "# define the differential (dfdx):\n",
    "r = sqrt(x**2 + y**2)\n",
    "dfdx = x / sqrt(r**2 + sigma**2)\n",
    "Derivative(r, x), dfdx"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": [
       "iVBORw0KGgoAAAANSUhEUgAAAR8AAAAvCAYAAADaWs5UAAAABHNCSVQICAgIfAhkiAAACjBJREFU\n",
       "eJztnXvQFWUdxz+8Ly8oJDgKg3EXJQqCNIk74gWGNB2KgDQrImoCKYkyjaykmcJXvEQXmxyb6RA1\n",
       "VoCFoWl04W2aipmgi5dESjGVcsThpiQS2h/f3facZffs7dmzZ9/3+cycOWfP7v6e33ve3Wef53d7\n",
       "wGKxWCwWi8USTAtwFzCzYD26Aa/ZV6d4WToXY4B7gd4mhbYC64GrTApNyWRgadFKWCyWQC4GfgGc\n",
       "YkrgWmClKWEZuQUYULQSFosllPcDD6DZUibmAdtMCDLEuqIVsFgskfwQ+GIWAa8H/gUMM6JOdiYC\n",
       "HytaCYvFEslpqO+YllbAOqA9wfH9gZuA1cCotI3W4WZgYA5yLRaLeT4O7CDFrGk8sB/1YHHpDZwK\n",
       "TAKeRJ2RSdYbkjMRWAGsArYC5xuSmxdl0bcseloaQw/UD3wo6YkbkKE5LWuBazKc7+dtwHIDcl5H\n",
       "7WhuAXAEGGRAdh6URd+y6GlpLCuAvyU5YQhwDHhLhkaXAF/NcL6fdmCwATnjgFeBs5ztPijmZIEB\n",
       "2XlQFn3LoqelsfQDjuKLD+xe54RFwCPAXxI00gLcAFwIPI2mX3sTqVmfQcAzBuQ8hGKFnnC2hzjv\n",
       "uw3IzoOy6FsWPZuNqcBI9KDfgUwXs4Fr8X7LMrMPuA/4MIr/iWQnMhwn4XbgQTTPA3gK+HxCGWG8\n",
       "FfikIVl+1gO3pTx3HPU78Twoi75Z9Owq9AEWO5/nANudz+uAMwrRKB8+AhwE2qIOHIyGyxcnED4M\n",
       "eAXPw9UCvARckEjFcFYDQw3JqmYxsAalbKShAgw3pUwMyqJvVj27CifhPazbgc8UqEueDMfXp4S5\n",
       "v2agufvvEgifBOwBdjnbs5GP/7cJlQxjKPBPQ7JcLnPerwN60thOJA1l0bcsejYDL6OHNsAs4JfO\n",
       "577FqJMbe4BnUd8ChHc+44G/A/9JIPwF4EXnc1/gVuB64L8xzz+5zr5zgD/HlDMW2AwcIjiR8Z3O\n",
       "cTNQisZ9aHj7dhRQ2SjOQ8b424F7UDjDShTH9D08o61LkfoOB77utP1e375l1M7ji/5dy8blyBs0\n",
       "HE2J3et8YVEK5chDyHxSlw5gU0LBLcg1/yPgfuCKBOf2QqOs00P2f4l4T89LkWv3W8Bc1PkddbZn\n",
       "ohujDRgBHObEjqlPAp1dKjF1q2YEcAde518BHgemIOPjq8CnfMcXqe830dRgOfBX377twA9y0LOr\n",
       "sAj4BgrGuw7935fSOXMX16DRT132opFLI+iOjNIHUTJaEN+PIWckGnl91Pd9BeWl5UWFdDdzdcbv\n",
       "BjxD4xD024d1xFmpkEzfaXijnZ8BG6v29UbhGLbCgCUOy9DD6KSwA9qA49Q+efNkCLrRNqBEND/j\n",
       "0Agmio14N3A1a4DHUmsXTYXknc+Zvu1ngC+bUCYGFZLpeway2wxC18W7qvbNQhfTGEO6WTo3c9H1\n",
       "cjYEu1wHounAvxuk0NPO+0+Br6HO71jV/nlEZ7GfityUQdHPb8CMoXodwQGXQ4EJeEbDahajuA0/\n",
       "T1Z9HoVu7F9nVdCHKX3d62ABGlneX7VvOorheDSTppaugnstDUY25RMYS61htlH0Q0/Wi3zfx5ly\n",
       "TUQ6j/d93xsZnvOcFlTI5s1ZiuxSvaq+G5FBXhQV0un7APAT33fbkLHcYonDOeg+vQyCvV3uTfBy\n",
       "hCDT5TP3AX/Ac9MCvBlFWUex33l/0ff9UuTu/04MGY3iZDQVHOtsz0JG3CPOdguKbG02huGFUYCm\n",
       "YhOB3xSjTmyKLhPblV5RuH1KLwjufHo670cjBHXL+ApiC7WdzzxkC4riceQtqw6KnIHq/swluiNt\n",
       "JJcCn0Z2kjciQ3n1b/1ZmrNY2lPUVjdoR4bDjoxyR1HHAGmArNepfWW7p6txp/o9Idjm494IPQL2\n",
       "BdEfpT28hm6aXfUPr8sWvDpAu5C9Jm5e0FxkMxqN/q7j6Mn8XAZ98qADTX3OQzEPk5D36070228m\n",
       "2HBeNJ8Avo3cwkfQFPcgyXL//FwI/Ao5C+ZnVdDS9EQObFybz5yYAk3X79mDPG2jMZcXlicVyhXB\n",
       "WyG7vq5D4rsZ5YwGnqfWAF8UrhvYvvKbdp3rHBdq8znkvMdd+uIl4ACy12wGrox5XhhbUNRn3ClX\n",
       "0RyiuaZ1UaTR925qgwvnoClY0sRjP4+ih1UzTDN7UPy0peyvKFx7st82+3/cOJ8VMYT5MVG/ZzZy\n",
       "tfs9K5bieB6lV4BCMZ7A7BJKqw3KSsMkFFluyZd3o5HPSAi2+RxDdpI46fxh9Xuy1CfZhp7Mf4rR\n",
       "vqUxLEFVJG9F18WVmLNLTebElI1GMwX4SsJzWtBUzc1JXGNUo+Zq11Sbbo5f3ZpcHShHK4qg+j03\n",
       "kr0+yQZkD7B0blrRNRRnyJ4X3UhXJ+pyvGJpm5ADoREU0a6pNm+hKrcrLKt9J14cShjDkCv7GuRC\n",
       "a0GBgtvxirxPBn7sfF5I/Kjp+dio2a7AcTxPaVFMI13Zl7Pw7Jv/wLs586aIdk21OZbgiP8arkKl\n",
       "MOqVuXgPiq9xuQSFTFdP5Xag4Tp0vvokls5B2hzGnnjJwQ/SuOWcimjXVJvPopkRED7y6UBD4il1\n",
       "BIXV77mErlOfxFJuWlH5kjQcReVDpiM7pcla5c3Wrok2z0Sd1rY4B++k/mKBYfV7FtF16pNYys1F\n",
       "xChuVYe+wBcSHG9qpd0i2k3app8laMDSGufgGyneC2GxmKAVRZH7DdtZc+iWodCUNnzLwoSwKmN7\n",
       "RbabtE0/m0kQlDoU2X3OTdGQxdJMuGkcE6q+645SRuqxApX+PIBKCj+GbiJQgbVDKCF6P0qCjmJV\n",
       "jGOmAh9Erv/3oeJ49+BVOsir3VbgapSE7f5O/ZDdNk2b1fRHTqnpSU7ahBdcZrGUmaupLdg2G9kk\n",
       "w2hHNbW7IWPrbrInwK6K2J/XMjpR7YIyCvqjaHZ3kcf5mAn2XUFADfao9ZtuBn6OlH/BgBIWS1Hc\n",
       "i8rA3uBsj0OemyBGozCRGc72YZRE25f4qSkD0Miqeqo3jdoO7DC1HeIrhIepxCVNuwBbnfeZaHE/\n",
       "0LJXHQnaDqIN2ZxS5Wmup3HRmxZLnvwRxay4xfDDuBY5S1xOw4z9c1WCY02GqcRt9wpqa3Q/QjaD\n",
       "PMjQ/HsCAknDXO3VXA98gHJlblssQWxG05lZaEQfxj5qRzifozEF3opeRmcgCiLE0WEg8ZesCqIP\n",
       "mrouJyCQNI7b6zCqgbwaWauLjEa1WLJwAN3c+/EMx0E8DLwDRfHPRtUat9Y5Pi4XUD/OZSoqMne6\n",
       "0+YEVHp0I6oekVe7Ls8hO08b+p32Eq+McRh3okUQ784gA1C2+sqsQiyWgtlN/SlXnsRZhaVZ2t2K\n",
       "3OtpmY9sbEby9rqjlTSz1uuxWIrkNpySDpYaxqD0h25oBPYw9dOr6nE+mtaeEnVgElqAuzhxhQmL\n",
       "xVJuBqDA4oXAWtK79t+E3PNxixFaLBaLxWKxWCwWi8VisVg6Ef8DqeNFTgqC36QAAAAASUVORK5C\n",
       "YII=\n"
      ],
      "text/latex": [
       "$$\\left ( \\frac{\\partial}{\\partial x} \\sqrt{\\sigma^{2} + x^{2} + y^{2}}, \\quad \\frac{x}{\\sqrt{\\sigma^{2} + x^{2} + y^{2}}}\\right )$$"
      ],
      "text/plain": [
       "⎛  ⎛   ______________⎞                   ⎞\n",
       "⎜∂ ⎜  ╱  2    2    2 ⎟          x        ⎟\n",
       "⎜──⎝╲╱  σ  + x  + y  ⎠, ─────────────────⎟\n",
       "⎜∂x                        ______________⎟\n",
       "⎜                         ╱  2    2    2 ⎟\n",
       "⎝                       ╲╱  σ  + x  + y  ⎠"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# now use sympy to calculate the differential\n",
    "Derivative(phi(x, y, sigma), x), diff(phi(x, y, sigma), x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'diff' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-1-1b8fc68e3c98>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;31m# now use sympy to calculate the differential\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0mdiff\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mphi\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msigma\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m \u001b[0;31m# looks different from dfdx\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mNameError\u001b[0m: name 'diff' is not defined"
     ]
    }
   ],
   "source": [
    "\n",
    "# looks different from dfdx\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "\n",
    "# now use sympy to calculate the differential\n",
    "print diff(phi(x, y, sigma), x)             # looks different from dfdx\n",
    "print dfdx - diff(phi(x, y, sigma), x)      # but difference is zero!\n",
    "                                            # so it is correct"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 2",
   "language": "python",
   "name": "python2"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}
