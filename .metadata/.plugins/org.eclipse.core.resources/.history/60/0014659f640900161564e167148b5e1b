class Shape:
    def draw(self): raise Exception("abstract method")
    def show(self): raise Exception("abstract method")
    def hide(self): raise Exception("abstract method")
    
class Ellipse(Shape):
    def draw(self): print "Ellipse draw"
    def show(self): print "Ellipse show"
    def hide(self): print "Ellipse hide"
    
class Rectangle(Shape):
    def draw(self): print "Rectangle draw"
    def show(self): print "Rectangle show"
    def hide(self): print "Rectangle hide"
    
class Polygon(Shape):
    def draw(self): print "Polygon draw"
    def show(self): print "Polygon show"
    def hide(self): print "Polygon hide"
    
class ShapeFactory:
    
    def create(code):
        if code == 1: return Ellipse()
        if code == 2: return Rectangle()
        if code == 3: return Polygon()
        raise Exception("code not supported")
    
def HideAnyShape(s):
    s.hide()
    


e = ShapeFactory(1)
r = ShapeFactory(2)
p = ShapeFactory(3)
HideAnyShape(e)
HideAnyShape(r)
HideAnyShape(p)

1