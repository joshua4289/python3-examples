Created by PLY version 3.9 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT

Grammar

Rule 0     S' -> all
Rule 1     all -> sequences
Rule 2     sequences -> revert
Rule 3     sequences -> sequences sequence4
Rule 4     sequences -> sequences sequence5
Rule 5     sequences -> sequences sequence1
Rule 6     sequences -> sequences sequence2
Rule 7     sequences -> sequences sequence3
Rule 8     revert -> REVERT
Rule 9     sequence5 -> IDENTIFIER
Rule 10    sequence4 -> TEMPO
Rule 11    sequence3 -> DURATION IDENTIFIER
Rule 12    sequence2 -> DURATION IDENTIFIER notes
Rule 13    sequence1 -> DURATION notes IDENTIFIER
Rule 14    sequence1 -> DURATION notes
Rule 15    notes -> notes NOTE
Rule 16    notes -> NOTE

Terminals, with rules where they appear

COMMENT              : 
DURATION             : 11 12 13 14
IDENTIFIER           : 9 11 12 13
NOTE                 : 15 16
REVERT               : 8
TEMPO                : 10
error                : 

Nonterminals, with rules where they appear

all                  : 0
notes                : 12 13 14 15
revert               : 2
sequence1            : 5
sequence2            : 6
sequence3            : 7
sequence4            : 3
sequence5            : 4
sequences            : 1 3 4 5 6 7

Parsing method: LALR

state 0

    (0) S' -> . all
    (1) all -> . sequences
    (2) sequences -> . revert
    (3) sequences -> . sequences sequence4
    (4) sequences -> . sequences sequence5
    (5) sequences -> . sequences sequence1
    (6) sequences -> . sequences sequence2
    (7) sequences -> . sequences sequence3
    (8) revert -> . REVERT

    REVERT          shift and go to state 1

    revert                         shift and go to state 2
    sequences                      shift and go to state 3
    all                            shift and go to state 4

state 1

    (8) revert -> REVERT .

    TEMPO           reduce using rule 8 (revert -> REVERT .)
    IDENTIFIER      reduce using rule 8 (revert -> REVERT .)
    DURATION        reduce using rule 8 (revert -> REVERT .)
    $end            reduce using rule 8 (revert -> REVERT .)


state 2

    (2) sequences -> revert .

    TEMPO           reduce using rule 2 (sequences -> revert .)
    IDENTIFIER      reduce using rule 2 (sequences -> revert .)
    DURATION        reduce using rule 2 (sequences -> revert .)
    $end            reduce using rule 2 (sequences -> revert .)


state 3

    (1) all -> sequences .
    (3) sequences -> sequences . sequence4
    (4) sequences -> sequences . sequence5
    (5) sequences -> sequences . sequence1
    (6) sequences -> sequences . sequence2
    (7) sequences -> sequences . sequence3
    (10) sequence4 -> . TEMPO
    (9) sequence5 -> . IDENTIFIER
    (13) sequence1 -> . DURATION notes IDENTIFIER
    (14) sequence1 -> . DURATION notes
    (12) sequence2 -> . DURATION IDENTIFIER notes
    (11) sequence3 -> . DURATION IDENTIFIER

    $end            reduce using rule 1 (all -> sequences .)
    TEMPO           shift and go to state 8
    IDENTIFIER      shift and go to state 11
    DURATION        shift and go to state 7

    sequence2                      shift and go to state 5
    sequence1                      shift and go to state 6
    sequence5                      shift and go to state 9
    sequence3                      shift and go to state 10
    sequence4                      shift and go to state 12

state 4

    (0) S' -> all .



state 5

    (6) sequences -> sequences sequence2 .

    TEMPO           reduce using rule 6 (sequences -> sequences sequence2 .)
    IDENTIFIER      reduce using rule 6 (sequences -> sequences sequence2 .)
    DURATION        reduce using rule 6 (sequences -> sequences sequence2 .)
    $end            reduce using rule 6 (sequences -> sequences sequence2 .)


state 6

    (5) sequences -> sequences sequence1 .

    TEMPO           reduce using rule 5 (sequences -> sequences sequence1 .)
    IDENTIFIER      reduce using rule 5 (sequences -> sequences sequence1 .)
    DURATION        reduce using rule 5 (sequences -> sequences sequence1 .)
    $end            reduce using rule 5 (sequences -> sequences sequence1 .)


state 7

    (13) sequence1 -> DURATION . notes IDENTIFIER
    (14) sequence1 -> DURATION . notes
    (12) sequence2 -> DURATION . IDENTIFIER notes
    (11) sequence3 -> DURATION . IDENTIFIER
    (15) notes -> . notes NOTE
    (16) notes -> . NOTE

    IDENTIFIER      shift and go to state 14
    NOTE            shift and go to state 15

    notes                          shift and go to state 13

state 8

    (10) sequence4 -> TEMPO .

    TEMPO           reduce using rule 10 (sequence4 -> TEMPO .)
    IDENTIFIER      reduce using rule 10 (sequence4 -> TEMPO .)
    DURATION        reduce using rule 10 (sequence4 -> TEMPO .)
    $end            reduce using rule 10 (sequence4 -> TEMPO .)


state 9

    (4) sequences -> sequences sequence5 .

    TEMPO           reduce using rule 4 (sequences -> sequences sequence5 .)
    IDENTIFIER      reduce using rule 4 (sequences -> sequences sequence5 .)
    DURATION        reduce using rule 4 (sequences -> sequences sequence5 .)
    $end            reduce using rule 4 (sequences -> sequences sequence5 .)


state 10

    (7) sequences -> sequences sequence3 .

    TEMPO           reduce using rule 7 (sequences -> sequences sequence3 .)
    IDENTIFIER      reduce using rule 7 (sequences -> sequences sequence3 .)
    DURATION        reduce using rule 7 (sequences -> sequences sequence3 .)
    $end            reduce using rule 7 (sequences -> sequences sequence3 .)


state 11

    (9) sequence5 -> IDENTIFIER .

    TEMPO           reduce using rule 9 (sequence5 -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 9 (sequence5 -> IDENTIFIER .)
    DURATION        reduce using rule 9 (sequence5 -> IDENTIFIER .)
    $end            reduce using rule 9 (sequence5 -> IDENTIFIER .)


state 12

    (3) sequences -> sequences sequence4 .

    TEMPO           reduce using rule 3 (sequences -> sequences sequence4 .)
    IDENTIFIER      reduce using rule 3 (sequences -> sequences sequence4 .)
    DURATION        reduce using rule 3 (sequences -> sequences sequence4 .)
    $end            reduce using rule 3 (sequences -> sequences sequence4 .)


state 13

    (13) sequence1 -> DURATION notes . IDENTIFIER
    (14) sequence1 -> DURATION notes .
    (15) notes -> notes . NOTE

  ! shift/reduce conflict for IDENTIFIER resolved as shift
    IDENTIFIER      shift and go to state 16
    TEMPO           reduce using rule 14 (sequence1 -> DURATION notes .)
    DURATION        reduce using rule 14 (sequence1 -> DURATION notes .)
    $end            reduce using rule 14 (sequence1 -> DURATION notes .)
    NOTE            shift and go to state 17

  ! IDENTIFIER      [ reduce using rule 14 (sequence1 -> DURATION notes .) ]


state 14

    (12) sequence2 -> DURATION IDENTIFIER . notes
    (11) sequence3 -> DURATION IDENTIFIER .
    (15) notes -> . notes NOTE
    (16) notes -> . NOTE

    TEMPO           reduce using rule 11 (sequence3 -> DURATION IDENTIFIER .)
    IDENTIFIER      reduce using rule 11 (sequence3 -> DURATION IDENTIFIER .)
    DURATION        reduce using rule 11 (sequence3 -> DURATION IDENTIFIER .)
    $end            reduce using rule 11 (sequence3 -> DURATION IDENTIFIER .)
    NOTE            shift and go to state 15

    notes                          shift and go to state 18

state 15

    (16) notes -> NOTE .

    NOTE            reduce using rule 16 (notes -> NOTE .)
    TEMPO           reduce using rule 16 (notes -> NOTE .)
    IDENTIFIER      reduce using rule 16 (notes -> NOTE .)
    DURATION        reduce using rule 16 (notes -> NOTE .)
    $end            reduce using rule 16 (notes -> NOTE .)


state 16

    (13) sequence1 -> DURATION notes IDENTIFIER .

    TEMPO           reduce using rule 13 (sequence1 -> DURATION notes IDENTIFIER .)
    IDENTIFIER      reduce using rule 13 (sequence1 -> DURATION notes IDENTIFIER .)
    DURATION        reduce using rule 13 (sequence1 -> DURATION notes IDENTIFIER .)
    $end            reduce using rule 13 (sequence1 -> DURATION notes IDENTIFIER .)


state 17

    (15) notes -> notes NOTE .

    NOTE            reduce using rule 15 (notes -> notes NOTE .)
    TEMPO           reduce using rule 15 (notes -> notes NOTE .)
    IDENTIFIER      reduce using rule 15 (notes -> notes NOTE .)
    DURATION        reduce using rule 15 (notes -> notes NOTE .)
    $end            reduce using rule 15 (notes -> notes NOTE .)


state 18

    (12) sequence2 -> DURATION IDENTIFIER notes .
    (15) notes -> notes . NOTE

    TEMPO           reduce using rule 12 (sequence2 -> DURATION IDENTIFIER notes .)
    IDENTIFIER      reduce using rule 12 (sequence2 -> DURATION IDENTIFIER notes .)
    DURATION        reduce using rule 12 (sequence2 -> DURATION IDENTIFIER notes .)
    $end            reduce using rule 12 (sequence2 -> DURATION IDENTIFIER notes .)
    NOTE            shift and go to state 17

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IDENTIFIER in state 13 resolved as shift
